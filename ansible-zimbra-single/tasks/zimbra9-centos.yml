---
- name: configure static networking
  shell: >
    nmcli con mod "{{ ansible_default_ipv4.interface }}" ipv4.method manual ipv4.addresses "{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ansible.netcommon.ipaddr('host/prefix') }}" ipv4.gateway "{{ ansible_default_ipv4.gateway }}" &&
    nmcli con mod "{{ ansible_default_ipv4.interface }}" ipv4.dns "{{ ansible_dns.nameservers|join(' ') }}" &&
    nmcli con reload &&
    nmcli con up "{{ ansible_default_ipv4.interface }}"

- name: install utilities and dependencies
  yum:
    name:
      - bash-completion
      - tmux
      - telnet
      - bind-utils
      - tcpdump
      - wget
      - lsof
      - rsync
      - tar
      - nmap-ncat
      - chrony
      - perl
      - net-tools
    state: present

- name: perform update
  yum:
    name: '*'
    state: latest

- name: configure chronyd
  service:
    name: chronyd
    state: started
    enabled: yes

- name: configure time zone
  community.general.timezone:
    name: "{{ zimbra_timezone }}"

- name: configure time sync
  command: timedatectl set-ntp true

- name: restart chronyd
  service:
    name: chronyd
    state: restarted

- name: configure hostname
  hostname:
    name: "{{ zimbra_fqdn }}"

- name: gather facts
  setup:

- name: configure hosts file
  lineinfile:
    line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"
    path: '/etc/hosts'

- name: configure firewall
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  loop:
    - 25/tcp
    - 465/tcp
    - 587/tcp
    - 110/tcp
    - 995/tcp
    - 143/tcp
    - 993/tcp
    - 80/tcp
    - 443/tcp
    - 7071/tcp

- name: gather package facts
  package_facts:

- name: disable postfix
  service:
    name: postfix
    state: stopped
    enabled: no
  when: "'postfix' in ansible_facts.packages"

- name: install dnsmasq
  yum:
    name: dnsmasq
    state: present

- name: configure dnsmasq.conf
  template:
    src: dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    owner: root
    group: dnsmasq
    mode: 0644

- name: start and enable dnsmasq
  service:
    name: dnsmasq
    state: started
    enabled: yes

- name: configure local dns
  shell: >
    nmcli con mod "{{ ansible_default_ipv4.interface }}" ipv4.dns 127.0.0.1 &&
    nmcli con reload &&
    nmcli con up "{{ ansible_default_ipv4.interface }}"

- name: download zimbra installer
  get_url:
    url: https://download.zextras.com/zcs-9.0.0_OSE_RHEL8_latest-zextras.tgz
    dest: /root

- name: extract zimbra installer
  unarchive:
    src: /root/zcs-9.0.0_OSE_RHEL8_latest-zextras.tgz
    dest: /root
    remote_src: yes

- name: configure answer file
  template:
    src: zimbra_answers.txt.j2
    dest: /tmp/zimbra_answers.txt

- name: capture random chars 1
  shell: date | md5sum | cut -c 1-9
  register: zimbra_random_chars_1

- name: wait 3 seconds
  pause:
    seconds: 3

- name: capture random chars 2
  shell: date | md5sum | cut -c 1-14
  register: zimbra_random_chars_2

- name: capture mailboxd memory
  shell: free -m | awk 'NR==2{printf "%.0f\n", $2*0.25 }'
  register: zimbra_mailboxd_memory

- name: capture system memory
  shell: free -h | awk 'NR==2{printf "%.0f\n", $2 }'
  register: zimbra_system_memory

- name: configure config file
  template:
    src: zimbra_config.txt.j2
    dest: /tmp/zimbra_config.txt

- name: run zimbra installer phase 1
  shell: ./install.sh -s < /tmp/zimbra_answers.txt
  args:
    chdir: /root/zimbra-installer/

- name: run zimbra installer phase 2
  command: /opt/zimbra/libexec/zmsetup.pl -c /tmp/zimbra_config.txt

- name: set trusted ip
  shell: ./zmprov mcf +zimbraMailTrustedIP 127.0.0.1 +zimbraMailTrustedIP "{{ ansible_default_ipv4.address }}"
  args:
    chdir: /opt/zimbra/bin
  become: yes
  become_user: zimbra
  become_flags: -i
  ignore_errors: yes

- name: restart zimbra services
  shell: ./zmcontrol restart
  args:
    chdir: /opt/zimbra/bin
  become: yes 
  become_user: zimbra
  become_flags: -i
  ignore_errors: yes

- name: install epel
  yum:
    name: epel-release
    state: present

- name: install fail2ban
  yum:
    name: fail2ban
    state: present

- name: configure fail2ban jail.local
  template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: 0644

- name: configure fail2ban jail zimbra.local
  template:
    src: zimbra.local.j2
    dest: /etc/fail2ban/jail.d/zimbra.local
    owner: root
    group: root
    mode: 0644

- name: configure fail2ban jail sshd.local
  template:
    src: sshd.local.j2
    dest: /etc/fail2ban/jail.d/sshd.local
    owner: root
    group: root
    mode: 0644

- name: configure fail2ban filter zimbra-webmail.conf
  template:
    src: zimbra-webmail.conf.j2
    dest: /etc/fail2ban/filter.d/zimbra-webmail.conf
    owner: root
    group: root
    mode: 0644

- name: configure fail2ban filter zimbra-smtp.conf
  template:
    src: zimbra-smtp.conf.j2
    dest: /etc/fail2ban/filter.d/zimbra-smtp.conf
    owner: root
    group: root
    mode: 0644

- name: configure fail2ban filter zimbra-admin.conf
  template:
    src: zimbra-admin.conf.j2
    dest: /etc/fail2ban/filter.d/zimbra-admin.conf
    owner: root
    group: root
    mode: 0644

- name: start and persist fail2ban on boot
  service:
    name: fail2ban
    state: started
    enabled: yes
